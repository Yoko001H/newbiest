gc:
  openSchedule: true
  scmUrl: https://gc-scm-beta.wochacha.cn
  mScmUrl: https://beta-scm.wochacha.cn/
  mScmUsername: gc_mes
  mScmPassword: sZ9ia26Gkbb8eoz7ZHo8cEQrTsqEr21t1CWT6Rbi
  mesUrl: http://10.181.160.18:7001/mycim2
license:
  subject: newbiest_product_license
  publicAlias: nbPublicLicense
  storePass: newbiest123
  licensePath: D:/app_wms/license/newbiest.lic
  publicKeysStorePath: D:/app_wms/license/nb_public.keystore
publickey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJSZc2o/TmlSCcIIwEBeG1gYLgQsKEKG83zwnzGg/Vk+pY8xKFuCfdWI8p2V0ly06I7+URG+MfUukX2+Y8rda4MCAwEAAQ==
spring:
  application:
    name: starter
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle10gDialect
        hbm2ddl:
          auto: none
  datasource:
    druid:
      url: jdbc:oracle:thin:@10.181.160.18:1521:testdb
      username: wmstest
      password: wmstest
      driver-class-name: oracle.jdbc.OracleDriver
      # 初始化连接池 最小 最大数量
      initial-size: 30
      min-idle: 30
      max-active: 100
      # 获取连接最大等待时间
      max-wait: 60000
      # 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      # 检查连接的SQL
      validation-query: select 'x' from dual
      # 检查连接的场景
      test-on-return: false
      test-on-borrow: false
      test-while-idle: true
      # 打开PSCache，并且指定每个连接上PSCache的大小 Oracle建议打开。Mysql建议关闭
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      # 监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙(检测SQL注入)
      filters: stat,slf4j,config
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      stat-view-servlet:
        enabled: true
        reset-enable: true
        allow: 127.0.0.1
        deny: 192.168.1.73
      filter:
        # 慢SQL监控
        stat:
          log-slow-sql: true
          slow-sql-millis: 3000
          merge-sql: true
        # 数据库密码加密
        config:
          enabled: true
      # 配置密码的公钥 默认使用druid的ConfigTool进行加密
      connection-properties: config.decrypt=false;config.decrypt.key=${publickey}
  mail:
    host:
    username:
    password:
    from:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
#设置server的基本信息
server:
  servlet:
    session:
      cookie:
        http-only: true
# actuator配置
show:
  swagger: true
logging:
  path: D:/app_butterfly/log
management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 10111
    servlet:
      context-path: /
    ssl:
      enabled: false
  endpoint:
    health:
      show-details: always
